generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Type {
  id     Int      @id @default(autoincrement())
  name   String   @unique
  Region Region[]
  Party  Party[]
}

model Region {
  id        Int         @id @default(autoincrement())
  name      String
  type      Type        @relation(fields: [typeId], references: [id])
  typeId    Int
  parent    Region?     @relation("ChildRegion", fields: [parentId], references: [id])
  parentId  Int?
  child     Region[]    @relation("ChildRegion")
  Candidate Candidate[]
  User      User[]
  Ballot    Ballot[]

  @@unique([name, typeId])
}

model Party {
  id             Int              @id @default(autoincrement())
  name           String
  abbr           String
  logo           String
  type           Type             @relation(fields: [typeId], references: [id])
  typeId         Int
  PartyCandidate PartyCandidate[]
  BallotParty    BallotParty[]

  @@unique([name, typeId])
}

model Candidate {
  id         Int              @id @default(autoincrement())
  name       String
  location   Region           @relation(fields: [locationId], references: [id])
  locationId Int
  parties    PartyCandidate[]
}

model PartyCandidate {
  candidate   Candidate @relation(fields: [candidateId], references: [id])
  candidateId Int
  party       Party     @relation(fields: [partyId], references: [id])
  partyId     Int
  position    Int       @default(autoincrement())

  @@id(name: "partyCandidateId", [candidateId, partyId])
}

model User {
  id          Int           @id @default(autoincrement())
  username    String        @unique
  name        String
  email       String        @unique
  password    String
  role        String
  location    Region        @relation(fields: [locationId], references: [id])
  locationId  Int
  VoterBallot VoterBallot[]
}

model Ballot {
  id          Int           @id @default(autoincrement())
  name        String
  system      String
  minimum     Int
  maximum     Int
  location    Region        @relation(fields: [locationId], references: [id])
  locationId  Int
  VoterBallot VoterBallot[]
  BallotParty BallotParty[]
}

model VoterBallot {
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  ballot   Ballot @relation(fields: [ballotId], references: [id])
  ballotId Int
  votedFor String

  @@id(name: "voterBallotId", [userId, ballotId])
}

model BallotParty {
  party    Party  @relation(fields: [partyId], references: [id])
  partyId  Int
  ballot   Ballot @relation(fields: [ballotId], references: [id])
  ballotId Int

  @@id(name: "ballotPartyId", [partyId, ballotId])
}
